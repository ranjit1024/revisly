[
  {
    "id": 1,
    "question": "What is the correct syntax for declaring a package in Go?",
    "options": ["package myapp", "package main", "import \"package\"", "go init package"],
    "correctAnswer": 1
  },
  {
    "id": 2,
    "question": "What data type in Go is used to store a complex number?",
    "options": ["float64", "complex64", "rune", "uint8"],
    "correctAnswer": 1
  },
  {
    "id": 3,
    "question": "How do you declare a variable in Go with type inference?",
    "options": ["var x int = 10", "var x = 10", "type x int = 10", "short decl: x := 10"],
    "correctAnswer": 3
  },
  {
    "id": 4,
    "question": "What is the purpose of the `fallthrough` keyword in a switch statement?",
    "options": ["to break the switch statement", "to skip the current case", "to continue execution with the next case", "to return from the function"],
    "correctAnswer": 2
  },
  {
    "id": 5,
    "question": "What is the correct syntax for calling a variadic function in Go?",
    "options": ["func Add(a int, b int) { return a+b }", "func Sum(nums ...int) { ... }", "func Add(a, b int) { return a+b }", "func Sum(int) { ... }"],
    "correctAnswer": 1
  },
  {
    "id": 6,
    "question": "What is the purpose of the `context.WithCancel` function in Go?",
    "options": ["to create a new context with a deadline", "to create a new context with a cancellation scope", "to create a new context with a timeout", "to create a new context with a value"],
    "correctAnswer": 1
  },
  {
    "id": 7,
    "question": "How do you run a goroutine in Go?",
    "options": ["go func() { ... }", "func() { ... }", "go func mygoroutine() { ... }()", "func mygoroutine() { ... }()"],
    "correctAnswer": 0
  },
  {
    "id": 8,
    "question": "What is the idiomatic pattern for error handling in Go?",
    "options": ["if err != nil { return }", "if err != nil { panic(err) }", "if err != nil { log.Fatal(err) }", "if err != nil { return err }"],
    "correctAnswer": 3
  },
  {
    "id": 9,
    "question": "What is the purpose of the `make` function when creating a channel in Go?",
    "options": ["to create a new channel with a capacity", "to create a new channel with a buffer", "to create a new channel with a deadline", "to create a new channel with no buffer"],
    "correctAnswer": 1
  },
  {
    "id": 10,
    "question": "What is the correct syntax for defining a test function in Go?",
    "options": ["func TestMytest() { ... }", "func TestMytest(t *testing.T) { ... }", "func Mytest() { ... }", "func Mytest(t *testing.T) { ... }"],
    "correctAnswer": 1
  }
]